const mongoose = require("mongoose")
const DatabaseService = require("../services/DatabaseService")
const Course = require("../models/Course")
require("dotenv").config()

async function seedDatabase() {
  try {
    await mongoose.connect(process.env.MONGO_URI)
    console.log("Connected to MongoDB for seeding...")

    // Create sample admin user
    const adminUser = await DatabaseService.createUser({
      name: "Admin User",
      email: "admin@talimulislam.com",
      password: "admin123456",
      role: "admin",
      isEmailVerified: true,
    })

    console.log("‚úÖ Admin user created")

    // Create sample instructor
    const instructor = await DatabaseService.createUser({
      name: "‡¶â‡¶∏‡ßç‡¶§‡¶æ‡¶¶ ‡¶Æ‡ßã‡¶π‡¶æ‡¶Æ‡ßç‡¶Æ‡¶¶ ‡¶Ü‡¶≤‡ßÄ",
      email: "instructor@talimulislam.com",
      password: "instructor123",
      role: "instructor",
      isEmailVerified: true,
      profile: {
        bio: "‡¶á‡¶∏‡¶≤‡¶æ‡¶Æ‡¶ø‡¶ï ‡¶∏‡ßç‡¶ü‡¶æ‡¶°‡¶ø‡¶ú‡ßá ‡¶¨‡¶ø‡¶∂‡ßá‡¶∑‡¶ú‡ßç‡¶û",
        qualifications: ["‡¶Ü‡¶≤-‡¶Ü‡¶ú‡¶π‡¶æ‡¶∞ ‡¶¨‡¶ø‡¶∂‡ßç‡¶¨‡¶¨‡¶ø‡¶¶‡ßç‡¶Ø‡¶æ‡¶≤‡¶Ø‡¶º ‡¶•‡ßá‡¶ï‡ßá ‡¶∏‡ßç‡¶®‡¶æ‡¶§‡¶ï", "‡¶Æ‡¶¶‡¶ø‡¶®‡¶æ ‡¶¨‡¶ø‡¶∂‡ßç‡¶¨‡¶¨‡¶ø‡¶¶‡ßç‡¶Ø‡¶æ‡¶≤‡¶Ø‡¶º ‡¶•‡ßá‡¶ï‡ßá ‡¶∏‡ßç‡¶®‡¶æ‡¶§‡¶ï‡ßã‡¶§‡ßç‡¶§‡¶∞"],
      },
    })

    console.log("‚úÖ Instructor created")

    // Create sample courses
    const courses = [
      {
        title: "‡¶™‡ßç‡¶∞‡ßç‡¶Ø‡¶æ‡¶ï‡ßç‡¶ü‡¶ø‡¶ï‡ßç‡¶Ø‡¶æ‡¶≤ ‡¶á‡¶¨‡¶æ‡¶∞‡¶§",
        slug: "practical-ibarat",
        description: "‡¶Ü‡¶∞‡¶¨‡¶ø ‡¶≠‡¶æ‡¶∑‡¶æ ‡¶∂‡ßá‡¶ñ‡¶æ‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø ‡¶è‡¶ï‡¶ü‡¶ø ‡¶∏‡¶Æ‡ßç‡¶™‡ßÇ‡¶∞‡ßç‡¶£ ‡¶ï‡ßã‡¶∞‡ßç‡¶∏ ‡¶Ø‡¶æ ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞‡¶ø‡¶ï ‡¶á‡¶¨‡¶æ‡¶∞‡¶§ ‡¶∂‡ßá‡¶ñ‡¶æ‡¶Ø‡¶º‡•§",
        shortDescription: "‡¶Ü‡¶∞‡¶¨‡¶ø ‡¶≠‡¶æ‡¶∑‡¶æ‡¶∞ ‡¶Æ‡ßå‡¶≤‡¶ø‡¶ï ‡¶á‡¶¨‡¶æ‡¶∞‡¶§ ‡¶∂‡¶ø‡¶ñ‡ßÅ‡¶®",
        price: 2000,
        originalPrice: 2500,
        category: "arabic-language",
        level: "beginner",
        language: "bn",
        duration: {
          hours: 20,
          minutes: 0,
          totalMinutes: 1200,
        },
        instructor: {
          id: instructor._id,
          name: instructor.name,
          bio: instructor.profile.bio,
        },
        curriculum: [
          {
            moduleTitle: "‡¶Æ‡ßå‡¶≤‡¶ø‡¶ï ‡¶á‡¶¨‡¶æ‡¶∞‡¶§",
            moduleDescription: "‡¶Ü‡¶∞‡¶¨‡¶ø ‡¶≠‡¶æ‡¶∑‡¶æ‡¶∞ ‡¶Æ‡ßå‡¶≤‡¶ø‡¶ï ‡¶á‡¶¨‡¶æ‡¶∞‡¶§ ‡¶∂‡ßá‡¶ñ‡¶æ",
            lessons: [
              {
                lessonId: "lesson-1",
                title: "‡¶Ü‡¶∞‡¶¨‡¶ø ‡¶¨‡¶∞‡ßç‡¶£‡¶Æ‡¶æ‡¶≤‡¶æ",
                description: "‡¶Ü‡¶∞‡¶¨‡¶ø ‡¶¨‡¶∞‡ßç‡¶£‡¶Æ‡¶æ‡¶≤‡¶æ‡¶∞ ‡¶™‡¶∞‡¶ø‡¶ö‡¶Ø‡¶º",
                type: "video",
                duration: { minutes: 30 },
                isPreview: true,
                order: 1,
              },
              {
                lessonId: "lesson-2",
                title: "‡¶∏‡¶æ‡¶ß‡¶æ‡¶∞‡¶£ ‡¶∂‡¶¨‡ßç‡¶¶‡¶æ‡¶¨‡¶≤‡ßÄ",
                description: "‡¶¶‡ßà‡¶®‡¶®‡ßç‡¶¶‡¶ø‡¶® ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡ßÉ‡¶§ ‡¶Ü‡¶∞‡¶¨‡¶ø ‡¶∂‡¶¨‡ßç‡¶¶",
                type: "video",
                duration: { minutes: 45 },
                order: 2,
              },
            ],
            order: 1,
          },
          {
            moduleTitle: "‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞‡¶ø‡¶ï ‡¶ï‡¶•‡ßã‡¶™‡¶ï‡¶•‡¶®",
            moduleDescription: "‡¶¶‡ßà‡¶®‡¶®‡ßç‡¶¶‡¶ø‡¶® ‡¶ú‡ßÄ‡¶¨‡¶®‡ßá ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡ßÉ‡¶§ ‡¶Ü‡¶∞‡¶¨‡¶ø ‡¶ï‡¶•‡ßã‡¶™‡¶ï‡¶•‡¶®",
            lessons: [
              {
                lessonId: "lesson-3",
                title: "‡¶™‡¶∞‡¶ø‡¶ö‡¶Ø‡¶º ‡¶™‡¶∞‡ßç‡¶¨",
                description: "‡¶®‡¶ø‡¶ú‡ßá‡¶∞ ‡¶™‡¶∞‡¶ø‡¶ö‡¶Ø‡¶º ‡¶¶‡ßá‡¶ì‡¶Ø‡¶º‡¶æ",
                type: "video",
                duration: { minutes: 40 },
                order: 1,
              },
            ],
            order: 2,
          },
        ],
        thumbnail: "/images/courses/practical-ibarat.jpg",
        status: "published",
        isPublished: true,
        publishedAt: new Date(),
        tags: ["‡¶Ü‡¶∞‡¶¨‡¶ø", "‡¶á‡¶¨‡¶æ‡¶∞‡¶§", "‡¶≠‡¶æ‡¶∑‡¶æ ‡¶∂‡¶ø‡¶ï‡ßç‡¶∑‡¶æ"],
        prerequisites: ["‡¶¨‡¶æ‡¶Ç‡¶≤‡¶æ ‡¶™‡¶°‡¶º‡¶§‡ßá ‡¶™‡¶æ‡¶∞‡¶æ"],
        learningObjectives: ["‡¶Ü‡¶∞‡¶¨‡¶ø ‡¶¨‡¶∞‡ßç‡¶£‡¶Æ‡¶æ‡¶≤‡¶æ ‡¶ö‡ßá‡¶®‡¶æ", "‡¶∏‡¶æ‡¶ß‡¶æ‡¶∞‡¶£ ‡¶Ü‡¶∞‡¶¨‡¶ø ‡¶∂‡¶¨‡ßç‡¶¶ ‡¶¨‡ßÅ‡¶ù‡¶§‡ßá ‡¶™‡¶æ‡¶∞‡¶æ", "‡¶Æ‡ßå‡¶≤‡¶ø‡¶ï ‡¶ï‡¶•‡ßã‡¶™‡¶ï‡¶•‡¶® ‡¶ï‡¶∞‡¶§‡ßá ‡¶™‡¶æ‡¶∞‡¶æ"],
        targetAudience: ["‡¶®‡¶§‡ßÅ‡¶® ‡¶∂‡¶ø‡¶ï‡ßç‡¶∑‡¶æ‡¶∞‡ßç‡¶•‡ßÄ", "‡¶Ü‡¶∞‡¶¨‡¶ø ‡¶≠‡¶æ‡¶∑‡¶æ ‡¶∂‡¶ø‡¶ñ‡¶§‡ßá ‡¶Ü‡¶ó‡ßç‡¶∞‡¶π‡ßÄ"],
      },
      {
        title: "‡¶ï‡ßÅ‡¶∞‡¶Ü‡¶® ‡¶§‡¶ø‡¶≤‡¶æ‡¶ì‡¶Ø‡¶º‡¶æ‡¶§",
        slug: "quran-tilawat",
        description: "‡¶∏‡ßÅ‡¶®‡ßç‡¶¶‡¶∞ ‡¶ì ‡¶∂‡ßÅ‡¶¶‡ßç‡¶ß‡¶≠‡¶æ‡¶¨‡ßá ‡¶ï‡ßÅ‡¶∞‡¶Ü‡¶® ‡¶§‡¶ø‡¶≤‡¶æ‡¶ì‡¶Ø‡¶º‡¶æ‡¶§ ‡¶∂‡ßá‡¶ñ‡¶æ‡¶∞ ‡¶ï‡ßã‡¶∞‡ßç‡¶∏‡•§",
        shortDescription: "‡¶ï‡ßÅ‡¶∞‡¶Ü‡¶® ‡¶§‡¶ø‡¶≤‡¶æ‡¶ì‡¶Ø‡¶º‡¶æ‡¶§‡ßá‡¶∞ ‡¶®‡¶ø‡¶Ø‡¶º‡¶Æ ‡¶∂‡¶ø‡¶ñ‡ßÅ‡¶®",
        price: 1500,
        category: "quran-studies",
        level: "beginner",
        language: "bn",
        duration: {
          hours: 15,
          minutes: 30,
          totalMinutes: 930,
        },
        instructor: {
          id: instructor._id,
          name: instructor.name,
          bio: instructor.profile.bio,
        },
        curriculum: [
          {
            moduleTitle: "‡¶§‡¶æ‡¶ú‡¶¨‡¶ø‡¶¶‡ßá‡¶∞ ‡¶Æ‡ßÇ‡¶≤‡¶®‡ßÄ‡¶§‡¶ø",
            moduleDescription: "‡¶ï‡ßÅ‡¶∞‡¶Ü‡¶® ‡¶§‡¶ø‡¶≤‡¶æ‡¶ì‡¶Ø‡¶º‡¶æ‡¶§‡ßá‡¶∞ ‡¶Æ‡ßÇ‡¶≤ ‡¶®‡¶ø‡¶Ø‡¶º‡¶Æ‡¶æ‡¶¨‡¶≤‡ßÄ",
            lessons: [
              {
                lessonId: "quran-lesson-1",
                title: "‡¶Æ‡¶æ‡¶ñ‡¶∞‡¶æ‡¶ú ‡¶™‡¶∞‡¶ø‡¶ö‡¶ø‡¶§‡¶ø",
                description: "‡¶Ü‡¶∞‡¶¨‡¶ø ‡¶¨‡¶∞‡ßç‡¶£‡ßá‡¶∞ ‡¶â‡¶ö‡ßç‡¶ö‡¶æ‡¶∞‡¶£‡¶∏‡ßç‡¶•‡¶æ‡¶®",
                type: "video",
                duration: { minutes: 35 },
                isPreview: true,
                order: 1,
              },
            ],
            order: 1,
          },
        ],
        thumbnail: "/images/courses/quran-tilawat.jpg",
        status: "published",
        isPublished: true,
        publishedAt: new Date(),
        tags: ["‡¶ï‡ßÅ‡¶∞‡¶Ü‡¶®", "‡¶§‡¶ø‡¶≤‡¶æ‡¶ì‡¶Ø‡¶º‡¶æ‡¶§", "‡¶§‡¶æ‡¶ú‡¶¨‡¶ø‡¶¶"],
      },
    ]

    for (const courseData of courses) {
      await DatabaseService.createCourse(courseData)
    }

    console.log("‚úÖ Sample courses created")

    // Create sample student
    const student = await DatabaseService.createUser({
      name: "‡¶Ü‡¶π‡¶Æ‡ßá‡¶¶ ‡¶π‡¶æ‡¶∏‡¶æ‡¶®",
      email: "student@example.com",
      password: "student123",
      phone: "01712345678",
      isEmailVerified: true,
    })

    console.log("‚úÖ Sample student created")

    console.log("\nüéâ Database seeding completed successfully!")
    console.log("\nLogin credentials:")
    console.log("Admin: admin@talimulislam.com / admin123456")
    console.log("Instructor: instructor@talimulislam.com / instructor123")
    console.log("Student: student@example.com / student123")
  } catch (error) {
    console.error("‚ùå Seeding failed:", error)
  } finally {
    await mongoose.disconnect()
  }
}

// Run seeding if this file is executed directly
if (require.main === module) {
  seedDatabase()
}

module.exports = seedDatabase
